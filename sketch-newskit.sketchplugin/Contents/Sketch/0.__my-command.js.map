{"version":3,"sources":["webpack://exports/./src/util.js"],"names":["MSColorToRGBA","c","Math","round","red","green","blue","alpha","angleBetween","p1","p2","angleDeg","atan2","y","x","PI","parseGradient","gradient","angle","from","to","type","gradientType","stops","str","forEach","stop","push","color","position","toFixed","output","join","findLayersMatchingPredicate_inContainer_filterByType","predicate","container","layerType","scope","MSPage","doc","pages","filteredArrayUsingPredicate","MSArtboardGroup","nil","className","artboards","filteredArray","NSArray","array","loopPages","objectEnumerator","page","nextObject","arrayByAddingObjectsFromArray","children","findFirstLayerMatchingPredicate_inContainer_filterByType","firstObject","findLayersNamed_inContainer_filterByType","layerName","NSPredicate","predicateWithFormat","findPagesNamed","pageName","findArtboardsNamed","artboardName","lib","CGSizeToObj","size","width","height","CGRectToObj","rect","origin","getSharedStyles","myStyles","sketch","version","styles","MSDocument","currentDocument","documentData","layerStyles","objects","layerTextStyles","allLayerStyles","allTextStyles","sortByName","NSSortDescriptor","sortDescriptorWithKey_ascending","sortedArrayUsingDescriptors","style","tokenFormat","number","Array","length","prototype","contains","v","i","unique","arr","Object","getKeyByValue","value","prop","hasOwnProperty","splitWords","s","re","match","exec","toUpperCase","prettifyJSON","data","JSON","stringify","split","prevCat","item","index","cat","console","log"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA,SAASA,aAAT,CAAuBC,CAAvB,EAA0B;AACtB,wBAAeC,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACG,GAAF,KAAU,GAArB,CAAf,eAA6CF,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACI,KAAF,KAAY,GAAvB,CAA7C,eAA6EH,IAAI,CAACC,KAAL,CAAWF,CAAC,CAACK,IAAF,KAAW,GAAtB,CAA7E,eAA4GL,CAAC,CAACM,KAAF,EAA5G;AACD,C,CAED;;;AACA,SAASC,YAAT,CAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;AAC5B,MAAIC,QAAQ,GAAGT,IAAI,CAACU,KAAL,CAAWF,EAAE,CAACG,CAAH,GAAOJ,EAAE,CAACI,CAArB,EAAwBH,EAAE,CAACI,CAAH,GAAOL,EAAE,CAACK,CAAlC,IAAuC,GAAvC,GAA6CZ,IAAI,CAACa,EAAjE;AACA,SAAOb,IAAI,CAACC,KAAL,CAAWQ,QAAX,CAAP;AACD,C,CAED;;;AACA,SAASK,aAAT,CAAuBC,QAAvB,EAAiC;AAE/B,MAAIC,KAAK,GAAGV,YAAY,CAACS,QAAQ,CAACE,IAAT,EAAD,EAAkBF,QAAQ,CAACG,EAAT,EAAlB,CAAxB;AACA,MAAIC,IAAJ;;AACA,UAAQJ,QAAQ,CAACK,YAAT,EAAR;AACE,SAAK,CAAL;AACED,UAAI,GAAG,iBAAP;AACA;;AACF,SAAK,CAAL;AACEA,UAAI,GAAG,iBAAP;AACA;;AACF,SAAK,CAAL;AACEA,UAAI,GAAG,kBAAP;AACA;AATJ;;AAYA,MAAIE,KAAK,GAAGN,QAAQ,CAACM,KAAT,EAAZ;AACA,MAAIC,GAAG,GAAG,EAAV;AACAD,OAAK,CAACE,OAAN,CAAc,UAAAC,IAAI,EAAI;AAEpB;AACA;AACA;AAEAF,OAAG,CAACG,IAAJ,YAAa3B,aAAa,CAAC0B,IAAI,CAACE,KAAL,EAAD,CAA1B,cAA6CF,IAAI,CAACG,QAAL,GAAgBC,OAAhB,CAAwB,CAAxB,IAA2B,GAAxE;AAGD,GATD;AAWA,MAAIC,MAAM,aAAMV,IAAN,cAAcH,KAAd,iBAA0BM,GAAG,CAACQ,IAAJ,CAAS,GAAT,CAA1B,MAAV;AAEA,SAAOD,MAAP;AACD,C,CAGD;AACA;AACA;;;AAIA,IAAIE,oDAAoD,GAAG,SAAvDA,oDAAuD,CAAUC,SAAV,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AACpG,MAAIC,KAAJ;;AACA,UAAQD,SAAR;AACE,SAAKE,MAAL;AACED,WAAK,GAAGE,GAAG,CAACC,KAAJ,EAAR;AACA,aAAOH,KAAK,CAACI,2BAAN,CAAkCP,SAAlC,CAAP;AACA;;AAEF,SAAKQ,eAAL;AACE,UAAI,OAAOP,SAAP,KAAqB,WAArB,IAAoCA,SAAS,IAAIQ,GAArD,EAA0D;AACxD,YAAIR,SAAS,CAACS,SAAV,IAAuB,QAA3B,EAAqC;AACnCP,eAAK,GAAGF,SAAS,CAACU,SAAV,EAAR;AACA,iBAAOR,KAAK,CAACI,2BAAN,CAAkCP,SAAlC,CAAP;AACD;AACF,OALD,MAKO;AACL;AACA,YAAIY,aAAa,GAAGC,OAAO,CAACC,KAAR,EAApB;AACA,YAAIC,SAAS,GAAGV,GAAG,CAACC,KAAJ,GAAYU,gBAAZ,EAAhB;AAAA,YACEC,IADF;;AAEA,eAAOA,IAAI,GAAGF,SAAS,CAACG,UAAV,EAAd,EAAsC;AACpCf,eAAK,GAAGc,IAAI,CAACN,SAAL,EAAR;AACAC,uBAAa,GAAGA,aAAa,CAACO,6BAAd,CAA4ChB,KAAK,CAACI,2BAAN,CAAkCP,SAAlC,CAA5C,CAAhB;AACD;;AACD,eAAOY,aAAP;AACD;;AACD;;AAEF;AACE,UAAI,OAAOX,SAAP,KAAqB,WAArB,IAAoCA,SAAS,IAAIQ,GAArD,EAA0D;AACxDN,aAAK,GAAGF,SAAS,CAACmB,QAAV,EAAR;AACA,eAAOjB,KAAK,CAACI,2BAAN,CAAkCP,SAAlC,CAAP;AACD,OAHD,MAGO;AACL;AACA,YAAIY,aAAa,GAAGC,OAAO,CAACC,KAAR,EAApB;AACA,YAAIC,SAAS,GAAGV,GAAG,CAACC,KAAJ,GAAYU,gBAAZ,EAAhB;AAAA,YACEC,IADF;;AAEA,eAAOA,IAAI,GAAGF,SAAS,CAACG,UAAV,EAAd,EAAsC;AACpCf,eAAK,GAAGc,IAAI,CAACG,QAAL,EAAR;AACAR,uBAAa,GAAGA,aAAa,CAACO,6BAAd,CAA4ChB,KAAK,CAACI,2BAAN,CAAkCP,SAAlC,CAA5C,CAAhB;AACD;;AACD,eAAOY,aAAP;AACD;;AAvCL;;AAyCA,SAAOC,OAAO,CAACC,KAAR,EAAP,CA3CoG,CA2C7E;AACxB,CA5CD;;AA8CA,IAAIO,wDAAwD,GAAG,SAA3DA,wDAA2D,CAAUrB,SAAV,EAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AACxG,MAAIU,aAAa,GAAGb,oDAAoD,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,CAAxE;AACA,SAAOU,aAAa,CAACU,WAAd,EAAP;AACD,CAHD;;AAIA,IAAIC,wCAAwC,GAAG,SAA3CA,wCAA2C,CAAUC,SAAV,EAAqBvB,SAArB,EAAgCC,SAAhC,EAA2C;AACxF,MAAIF,SAAS,GAAI,OAAOE,SAAP,KAAqB,WAArB,IAAoCA,SAAS,IAAIO,GAAlD,GAAyDgB,WAAW,CAACC,mBAAZ,CAAgC,YAAhC,EAA8CF,SAA9C,CAAzD,GAAoHC,WAAW,CAACC,mBAAZ,CAAgC,2BAAhC,EAA6DF,SAA7D,EAAwEtB,SAAxE,CAApI;AACA,SAAOH,oDAAoD,CAACC,SAAD,EAAYC,SAAZ,CAA3D;AACD,CAHD;;AAKA,IAAI0B,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,QAAV,EAAoB;AACvC,MAAI5B,SAAS,GAAGyB,WAAW,CAACC,mBAAZ,CAAgC,YAAhC,EAA8CE,QAA9C,CAAhB;AACA,SAAO7B,oDAAoD,CAACC,SAAD,EAAYS,GAAZ,EAAiBL,MAAjB,CAA3D;AACD,CAHD;;AAMA,IAAIyB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,YAAV,EAAwB;AAC/C,MAAI9B,SAAS,GAAGyB,WAAW,CAACC,mBAAZ,CAAgC,YAAhC,EAA8CI,YAA9C,CAAhB;AACA,SAAO/B,oDAAoD,CAACC,SAAD,EAAYS,GAAZ,EAAiBD,eAAjB,CAA3D;AACD,CAHD,C,CAKA;;;AACA,IAAIuB,GAAG,GAAG,EAAV;;AACAA,GAAG,CAACC,WAAJ,GAAkB,UAAUC,IAAV,EAAgB;AAChC,SAAO;AACLC,SAAK,EAAED,IAAI,CAACC,KADP;AAELC,UAAM,EAAEF,IAAI,CAACE;AAFR,GAAP;AAID,CALD;;AAOAJ,GAAG,CAACK,WAAJ,GAAkB,UAAUC,IAAV,EAAgB;AAChC,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,MAAIL,IAAI,GAAGI,IAAI,CAACJ,IAAhB;AACA,SAAO;AACLrD,KAAC,EAAE0D,MAAM,CAAC1D,CADL;AAELD,KAAC,EAAE2D,MAAM,CAAC3D,CAFL;AAGLuD,SAAK,EAAED,IAAI,CAACC,KAHP;AAILC,UAAM,EAAEF,IAAI,CAACE;AAJR,GAAP;AAMD,CATD;AAWA;;;;;;;;;;;AASA,SAASI,eAAT,CAAyBpD,IAAzB,EAA+B;AAC7B,MAAIqD,QAAQ,GAAG,EAAf;;AACA,MAAIC,MAAM,CAACC,OAAP,CAAeD,MAAf,GAAwB,EAA5B,EAAgC;AAC9B,QAAIE,MAAM,GAAIxD,IAAI,IAAI,CAAT,GAAcyD,UAAU,CAACC,eAAX,GAA6BC,YAA7B,GAA4CC,WAA5C,GAA0DC,OAA1D,EAAd,GAAoFJ,UAAU,CAACC,eAAX,GAA6BC,YAA7B,GAA4CG,eAA5C,GAA8DD,OAA9D,EAAjG;AACD,GAFD,MAEO;AACL,QAAIL,MAAM,GAAIxD,IAAI,IAAI,CAAT,GAAcyD,UAAU,CAACC,eAAX,GAA6BC,YAA7B,GAA4CI,cAA5C,EAAd,GAA6EN,UAAU,CAACC,eAAX,GAA6BC,YAA7B,GAA4CK,aAA5C,EAA1F;AACD;;AAED,MAAIC,UAAU,GAAGC,gBAAgB,CAACC,+BAAjB,CAAiD,MAAjD,EAAyD,CAAzD,CAAjB;AACAX,QAAM,GAAGA,MAAM,CAACY,2BAAP,CAAmC,CAACH,UAAD,CAAnC,CAAT;AACAT,QAAM,CAACpD,OAAP,CAAe,UAAAiE,KAAK,EAAI;AACtBhB,YAAQ,CAAC/C,IAAT,CAAc+D,KAAd;AACD,GAFD;AAGA,SAAOhB,QAAP;AACD,C,CAED;;;AACA,IAAIiB,WAAW,GAAG,SAAdA,WAAc,CAAUC,MAAV,EAAkB;AAClC,SAAO,IAAIC,KAAJ,CAAU,CAAC,CAAD,GAAK,CAAL,GAAS,CAACD,MAAM,GAAG,EAAT,GAAc,EAAf,EAAmBE,MAAtC,EAA8C9D,IAA9C,CAAmD,GAAnD,IAA0D4D,MAAM,GAAG,EAA1E;AACD,CAFD,C,CAKA;;;AACAC,KAAK,CAACE,SAAN,CAAgBC,QAAhB,GAA2B,UAAUC,CAAV,EAAa;AACtC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AACpC,QAAI,KAAKA,CAAL,MAAYD,CAAhB,EAAmB,OAAO,IAAP;AACpB;;AACD,SAAO,KAAP;AACD,CALD;;AAOAJ,KAAK,CAACE,SAAN,CAAgBI,MAAhB,GAAyB,YAAY;AACnC,MAAIC,GAAG,GAAG,EAAV;;AACA,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AACpC,QAAI,CAACE,GAAG,CAACJ,QAAJ,CAAa,KAAKE,CAAL,CAAb,CAAL,EAA4B;AAC1BE,SAAG,CAACzE,IAAJ,CAAS,KAAKuE,CAAL,CAAT;AACD;AACF;;AACD,SAAOE,GAAP;AACD,CARD,C,CAUA;;;AACAC,MAAM,CAACN,SAAP,CAAiBO,aAAjB,GAAiC,UAAUC,KAAV,EAAiB;AAChD,OAAK,IAAIC,IAAT,IAAiB,IAAjB,EAAuB;AACrB,QAAI,KAAKC,cAAL,CAAoBD,IAApB,CAAJ,EAA+B;AAC7B,UAAI,KAAKA,IAAL,MAAeD,KAAnB,EACE,OAAOC,IAAP;AACH;AACF;AACF,CAPD,C,CASA;;;AACA,SAASE,UAAT,CAAoBC,CAApB,EAAuB;AACnB,MAAIC,EAAJ;AAAA,MAAQC,KAAR;AAAA,MAAe9E,MAAM,GAAG,EAAxB,CADmB,CAEnB;;AACA6E,IAAE,GAAG,sBAAL;AAEA;;;;;;;AAOAC,OAAK,GAAGD,EAAE,CAACE,IAAH,CAAQH,CAAR,CAAR;;AACA,SAAOE,KAAP,EAAc;AACV;AACA9E,UAAM,CAACJ,IAAP,CAAY,CAACkF,KAAK,CAAC,CAAD,CAAL,CAASE,WAAT,EAAD,EAAyBF,KAAK,CAAC,CAAD,CAA9B,EAAmC7E,IAAnC,CAAwC,EAAxC,CAAZ;AACA6E,SAAK,GAAGD,EAAE,CAACE,IAAH,CAAQH,CAAR,CAAR;AACH;;AAED,SAAO5E,MAAP;AAEH,C,CACD;;;AACA,SAASiF,YAAT,CAAsBC,IAAtB,EAA2B;AACzB,MAAIzF,GAAG,GAAG0F,IAAI,CAACC,SAAL,CAAeF,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAV;AACA,MAAIb,GAAG,GAAG5E,GAAG,CAAC4F,KAAJ,CAAU,IAAV,CAAV;AAEA,MAAIC,OAAO,GAAG,IAAd;AACAjB,KAAG,CAAC3E,OAAJ,CAAY,UAAC6F,IAAD,EAAMC,KAAN,EAAgB;AAE3B,QAAIC,GAAG,GAAGd,UAAU,CAACY,IAAD,CAAV,CAAiB,CAAjB,CAAV;;AACC,QAAGD,OAAO,KAAKG,GAAZ,IAAmBD,KAAK,IAAI,CAA5B,IAAiCA,KAAK,IAAInB,GAAG,CAACN,MAAJ,GAAY,CAAzD,EAA2D;AACzDM,SAAG,CAACmB,KAAK,GAAC,CAAP,CAAH,IAAgB,IAAhB;AACAE,aAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD;;AACFD,WAAO,GAAGG,GAAV;AACA,GARD;AAUAhG,KAAG,GAAG4E,GAAG,CAACpE,IAAJ,CAAS,IAAT,CAAN;AACA,SAAOR,GAAP;AACC,C","file":"0.__my-command.js","sourcesContent":["//===================================================\n// Utility functions.\n//I should probably take these out and import them.\n// Oh well.\n//===================================================\n\n//Convert sketch's colors into CSS RGBA\nfunction MSColorToRGBA(c) {\n    return `rgba(${Math.round(c.red() * 255)}, ${Math.round(c.green() * 255)}, ${Math.round(c.blue() * 255)}, ${c.alpha()})`\n  }\n  \n  //Used for gradients, to know what direction they face.\n  function angleBetween(p1, p2) {\n    let angleDeg = Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n    return Math.round(angleDeg)\n  }\n  \n  //Return a CSS string for some gradient stuff.\n  function parseGradient(gradient) {\n  \n    let angle = angleBetween(gradient.from(), gradient.to())\n    let type\n    switch (gradient.gradientType()) {\n      case 0:\n        type = \"linear-gradient\"\n        break;\n      case 1:\n        type = \"radial-gradient\"\n        break;\n      case 2:\n        type = \"angular-gradient\"\n        break;\n    }\n  \n    let stops = gradient.stops()\n    let str = []\n    stops.forEach(stop => {\n  \n      //We wanted to have gradients be made up of two tokens, but alpha values made things awkard.\n      // let colorToken = colorPalette.getKeyByValue(`${MSColorToRGBA(stop.color())}`)\n      // str.push(` ${colorToken} ${(stop.position().toFixed(4)*100)}%`)\n  \n      str.push(` ${MSColorToRGBA(stop.color())} ${(stop.position().toFixed(4)*100)}%`)\n  \n  \n    })\n  \n    let output = `${type}(${angle}deg,${str.join(',')})`\n  \n    return output\n  }\n  \n  \n  //https://gist.github.com/abynim/e2df3ea4dc9ede209cc0\n  //https://gist.github.com/abynim/4e1d4754f990cfc933ae\n  //Search Through sketch documents for stuff.\n  \n  \n  \n  var findLayersMatchingPredicate_inContainer_filterByType = function (predicate, container, layerType) {\n    var scope;\n    switch (layerType) {\n      case MSPage:\n        scope = doc.pages()\n        return scope.filteredArrayUsingPredicate(predicate)\n        break;\n  \n      case MSArtboardGroup:\n        if (typeof container !== 'undefined' && container != nil) {\n          if (container.className == \"MSPage\") {\n            scope = container.artboards()\n            return scope.filteredArrayUsingPredicate(predicate)\n          }\n        } else {\n          // search all pages\n          var filteredArray = NSArray.array()\n          var loopPages = doc.pages().objectEnumerator(),\n            page;\n          while (page = loopPages.nextObject()) {\n            scope = page.artboards()\n            filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n          }\n          return filteredArray\n        }\n        break;\n  \n      default:\n        if (typeof container !== 'undefined' && container != nil) {\n          scope = container.children()\n          return scope.filteredArrayUsingPredicate(predicate)\n        } else {\n          // search all pages\n          var filteredArray = NSArray.array()\n          var loopPages = doc.pages().objectEnumerator(),\n            page;\n          while (page = loopPages.nextObject()) {\n            scope = page.children()\n            filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n          }\n          return filteredArray\n        }\n    }\n    return NSArray.array() // Return an empty array if no matches were found\n  }\n  \n  var findFirstLayerMatchingPredicate_inContainer_filterByType = function (predicate, container, layerType) {\n    var filteredArray = findLayersMatchingPredicate_inContainer_filterByType(predicate, container, layerType)\n    return filteredArray.firstObject()\n  }\n  var findLayersNamed_inContainer_filterByType = function (layerName, container, layerType) {\n    var predicate = (typeof layerType === 'undefined' || layerType == nil) ? NSPredicate.predicateWithFormat(\"name == %@\", layerName) : NSPredicate.predicateWithFormat(\"name == %@ && class == %@\", layerName, layerType)\n    return findLayersMatchingPredicate_inContainer_filterByType(predicate, container)\n  }\n  \n  var findPagesNamed = function (pageName) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", pageName)\n    return findLayersMatchingPredicate_inContainer_filterByType(predicate, nil, MSPage)\n  }\n  \n  \n  var findArtboardsNamed = function (artboardName) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", artboardName)\n    return findLayersMatchingPredicate_inContainer_filterByType(predicate, nil, MSArtboardGroup)\n  }\n  \n  ///Rectangle handlers.\n  var lib = {}\n  lib.CGSizeToObj = function (size) {\n    return {\n      width: size.width,\n      height: size.height\n    }\n  };\n  \n  lib.CGRectToObj = function (rect) {\n    var origin = rect.origin;\n    var size = rect.size;\n    return {\n      x: origin.x,\n      y: origin.y,\n      width: size.width,\n      height: size.height\n    };\n  };\n  \n  /*\n   Sketch's document.getTextStyles() doesn't return all the info, and returns an MSArray\n   \n   Types:\n   0 layerStyles\n   1 textStyles\n   \n   Returns a JavaScript Array of styles\n   */\n  function getSharedStyles(type) {\n    var myStyles = []\n    if (sketch.version.sketch < 52) {\n      var styles = (type == 0) ? MSDocument.currentDocument().documentData().layerStyles().objects() : MSDocument.currentDocument().documentData().layerTextStyles().objects();\n    } else {\n      var styles = (type == 0) ? MSDocument.currentDocument().documentData().allLayerStyles() : MSDocument.currentDocument().documentData().allTextStyles();\n    }\n  \n    var sortByName = NSSortDescriptor.sortDescriptorWithKey_ascending(\"name\", 1);\n    styles = styles.sortedArrayUsingDescriptors([sortByName]);\n    styles.forEach(style => {\n      myStyles.push(style)\n    })\n    return myStyles;\n  }\n  \n  //Function to pad numbers into token form. eg: 1 becomes 010, 4.5 becomes 045\n  var tokenFormat = function (number) {\n    return new Array(+3 + 1 - (number * 10 + '').length).join('0') + number * 10;\n  }\n  \n  \n  //Sketch Scripts don't support Set(), we can fix this with a plugin and polyfills though...\n  Array.prototype.contains = function (v) {\n    for (var i = 0; i < this.length; i++) {\n      if (this[i] === v) return true;\n    }\n    return false;\n  };\n  \n  Array.prototype.unique = function () {\n    var arr = [];\n    for (var i = 0; i < this.length; i++) {\n      if (!arr.contains(this[i])) {\n        arr.push(this[i]);\n      }\n    }\n    return arr;\n  }\n  \n  //Get Object Key by value, to map each style to primitives\n  Object.prototype.getKeyByValue = function (value) {\n    for (var prop in this) {\n      if (this.hasOwnProperty(prop)) {\n        if (this[prop] === value)\n          return prop;\n      }\n    }\n  }\n  \n  //Split camelCase into words[]\n  function splitWords(s) {\n      var re, match, output = [];\n      // re = /[A-Z]?[a-z]+/g\n      re = /([A-Za-z]?)([a-z]+)/g;\n  \n      /*\n      matches example: \"oneTwoThree\"\n      [\"one\", \"o\", \"ne\"]\n      [\"Two\", \"T\", \"wo\"]\n      [\"Three\", \"T\", \"hree\"]\n      */\n  \n      match = re.exec(s);\n      while (match) {\n          // output.push(match.join(\"\"));\n          output.push([match[1].toUpperCase(), match[2]].join(\"\"));\n          match = re.exec(s);\n      }\n  \n      return output;\n  \n  }\n  //Splits JSON based on categories, returns a string with nice spacing between categories\n  function prettifyJSON(data){\n    let str = JSON.stringify(data, '\\n', 4)\n    let arr = str.split('\\n')\n    \n    let prevCat = null\n    arr.forEach((item,index) => {\n      \n     let cat = splitWords(item)[0]\n      if(prevCat !== cat && index != 1 && index != arr.length -1){\n        arr[index-1] += '\\n'\n        console.log(item)\n      }\n     prevCat = cat\n    })\n    \n    str = arr.join('\\n')\n    return str\n    }"],"sourceRoot":""}