{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./node_modules/@skpm/fs/index.js","webpack://exports/./node_modules/@skpm/fs/utils.js","webpack://exports/./node_modules/@skpm/path/index.js","webpack://exports/./node_modules/@skpm/path/sketch-specifics.js","webpack://exports/./src/my-command.js","webpack://exports/external \"buffer\"","webpack://exports/external \"os\"","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"util\""],"names":["sketch","require","Document","document","getSelectedDocument","Shape","Text","Group","page","MSDocument","currentDocument","currentPage","fs","path","home","homedir","doc","context","folderName","Date","toISOString","replace","fileURL","lastPathComponent","mainFolder","existsSync","mkdirSync","exportPath","texts","paints","shadows","blurs","output","DEFAULT_FONT_SIZE","gridSize","colorPalette","crops","shapeDefault","findArtboardsNamed","layers","cornerRadiusString","BORDER_RADIUS","colorStyles","getSharedStyles","filter","style","name","includes","forEach","value","split","length","fills","fill","fillType","MSColorToRGBA","color","parseGradient","gradient","regex","RegExp","themeColors","outputThemeColors","getPrimitiveFromColor","c","prim","getKeyByValue","object","Object","keys","find","key","shadowsOutput","shadowStyles","tokenName","layer","parent","predicate","NSPredicate","predicateWithFormat","id","result","children","filteredArrayUsingPredicate","shadowLayer","shadow","CSSAttributes","remove","blurStyles","blur","isEnabled","inp","o","type","effects","e","console","warn","visible","radius","push","overlayStyles","overlaysOutput","LETTER_SPACING","FONT_WEIGHTS","ultralight","thin","light","normal","regular","semibold","demibold","bold","extrabold","ultrabold","heavy","black","FONT_WEIGHTS_NUMBER","fontWeightTokens","isItalicFont","font","traits","fontDescriptor","objectForKey","NSFontTraitsAttribute","symbolicTraits","NSFontSymbolicTrait","unsignedIntValue","NSFontItalicTrait","isCondensedFont","NSFontCondensedTrait","weightOfFont","weight","NSFontWeightTrait","doubleValue","weights","fontName","String","toLowerCase","matchingWeight","w","endsWith","textStyles","getSharedTextStyleWithID","objectID","alignment","fontSizesArr","lineHeightsArr","fontWeightsArr","fontFamiliesArr","fontFiles","Set","textStyle","primitiveTextStyle","attributes","NSFont","fontSizePx","fontSize","lineHeight","adjLineHeight","outputRem","inc","rem","estLineHeight","Math","round","Number","toFixed","error","indexOf","fonts","textPrimitives","fontWeight","letterSpacing","unique","sort","fam","idx","cfg","getCropsForFontFamily","tokenFormat","family","top","bottom","defaultLineHeight","fontFamily","size","text","textLayer","fontPostscriptName","getDefaultLineHeightForFont","defaultLineHeightEm","bounds","pathInFrame","t","origin","y","b","height","fontWithName_size","lm","NSLayoutManager","alloc","init","defaultLineHeightForFont","index","textStylesOutput","cropProps","n","add","resolve","lineHeightPx","entries","adjLineHeightPx","familyObj","values","item","familyKey","kerning","cc","deltaLineHeight","exportFiles","file","copyFileSync","basename","err","writeFileSync","prettifyJSON","JSON","stringify","UI","message","red","green","blue","alpha","angleBetween","p1","p2","angleDeg","atan2","x","PI","angle","from","to","gradientType","stops","str","stop","position","join","findLayersMatchingPredicate_inContainer_filterByType","container","layerType","scope","MSPage","pages","MSArtboardGroup","nil","className","artboards","filteredArray","NSArray","array","loopPages","objectEnumerator","nextObject","arrayByAddingObjectsFromArray","findFirstLayerMatchingPredicate_inContainer_filterByType","firstObject","findLayersNamed_inContainer_filterByType","layerName","findPagesNamed","pageName","artboardName","lib","CGSizeToObj","width","CGRectToObj","rect","myStyles","version","styles","documentData","layerStyles","objects","layerTextStyles","allLayerStyles","allTextStyles","sortByName","NSSortDescriptor","sortDescriptorWithKey_ascending","sortedArrayUsingDescriptors","number","Array","prototype","contains","v","i","arr","prop","hasOwnProperty","splitWords","s","re","match","exec","toUpperCase","data","prevCat","cat","cats"],"mappings":";;;;;;;;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA,aAAa,mBAAO,CAAC,sBAAQ;AAC7B,YAAY,mBAAO,CAAC,iDAAS;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACpbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,mBAAO,CAAC,iDAAS;AACvC;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,mBAAO,CAAC,yEAAoB;;AAElD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,8BAA8B;AACpE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,qBAAqB;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,WAAW;AACX;AACA,qCAAqC;AACrC;AACA;AACA,SAAS;AACT;AACA;AACA,gDAAgD;AAChD;AACA,WAAW;AACX;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AA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","file":"__my-command.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/my-command.js\");\n","// TODO: async. Should probably be done with NSFileHandle and some notifications\n// TODO: file descriptor. Needs to be done with NSFileHandle\nvar Buffer = require(\"buffer\").Buffer;\nvar utils = require(\"./utils\");\nvar parseStat = utils.parseStat;\nvar fsError = utils.fsError;\nvar fsErrorForPath = utils.fsErrorForPath;\nvar encodingFromOptions = utils.encodingFromOptions;\nvar NOT_IMPLEMENTED = utils.NOT_IMPLEMENTED;\n\nmodule.exports.constants = {\n  F_OK: 0,\n  R_OK: 4,\n  W_OK: 2,\n  X_OK: 1,\n};\n\nmodule.exports.access = NOT_IMPLEMENTED(\"access\");\n\nmodule.exports.accessSync = function (path, mode) {\n  mode = mode | 0;\n  var fileManager = NSFileManager.defaultManager();\n\n  switch (mode) {\n    case 0:\n      canAccess = module.exports.existsSync(path);\n      break;\n    case 1:\n      canAccess = Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n    case 2:\n      canAccess = Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 3:\n      canAccess =\n        Boolean(Number(fileManager.isExecutableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 4:\n      canAccess = Boolean(Number(fileManager.isReadableFileAtPath(path)));\n      break;\n    case 5:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n    case 6:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path)));\n      break;\n    case 7:\n      canAccess =\n        Boolean(Number(fileManager.isReadableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isWritableFileAtPath(path))) &&\n        Boolean(Number(fileManager.isExecutableFileAtPath(path)));\n      break;\n  }\n\n  if (!canAccess) {\n    throw new Error(\"Can't access \" + String(path));\n  }\n};\n\nmodule.exports.appendFile = NOT_IMPLEMENTED(\"appendFile\");\n\nmodule.exports.appendFileSync = function (file, data, options) {\n  if (!module.exports.existsSync(file)) {\n    return module.exports.writeFileSync(file, data, options);\n  }\n\n  var handle = NSFileHandle.fileHandleForWritingAtPath(file);\n  handle.seekToEndOfFile();\n\n  var encoding = encodingFromOptions(options, \"utf8\");\n\n  var nsdata = Buffer.from(\n    data,\n    encoding === \"NSData\" || encoding === \"buffer\" ? undefined : encoding\n  ).toNSData();\n\n  handle.writeData(nsdata);\n};\n\nmodule.exports.chmod = NOT_IMPLEMENTED(\"chmod\");\n\nmodule.exports.chmodSync = function (path, mode) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.setAttributes_ofItemAtPath_error(\n    {\n      NSFilePosixPermissions: mode,\n    },\n    path,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n};\n\nmodule.exports.chown = NOT_IMPLEMENTED(\"chown\");\nmodule.exports.chownSync = NOT_IMPLEMENTED(\"chownSync\");\n\nmodule.exports.close = NOT_IMPLEMENTED(\"close\");\nmodule.exports.closeSync = NOT_IMPLEMENTED(\"closeSync\");\n\nmodule.exports.copyFile = NOT_IMPLEMENTED(\"copyFile\");\n\nmodule.exports.copyFileSync = function (path, dest, flags) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.copyItemAtPath_toPath_error(path, dest, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, false, err.value());\n  }\n};\n\nmodule.exports.createReadStream = NOT_IMPLEMENTED(\"createReadStream\");\nmodule.exports.createWriteStream = NOT_IMPLEMENTED(\"createWriteStream\");\n\nmodule.exports.exists = NOT_IMPLEMENTED(\"exists\");\n\nmodule.exports.existsSync = function (path) {\n  var fileManager = NSFileManager.defaultManager();\n  return Boolean(Number(fileManager.fileExistsAtPath(path)));\n};\n\nmodule.exports.fchmod = NOT_IMPLEMENTED(\"fchmod\");\nmodule.exports.fchmodSync = NOT_IMPLEMENTED(\"fchmodSync\");\nmodule.exports.fchown = NOT_IMPLEMENTED(\"fchown\");\nmodule.exports.fchownSync = NOT_IMPLEMENTED(\"fchownSync\");\nmodule.exports.fdatasync = NOT_IMPLEMENTED(\"fdatasync\");\nmodule.exports.fdatasyncSync = NOT_IMPLEMENTED(\"fdatasyncSync\");\nmodule.exports.fstat = NOT_IMPLEMENTED(\"fstat\");\nmodule.exports.fstatSync = NOT_IMPLEMENTED(\"fstatSync\");\nmodule.exports.fsync = NOT_IMPLEMENTED(\"fsync\");\nmodule.exports.fsyncSync = NOT_IMPLEMENTED(\"fsyncSync\");\nmodule.exports.ftruncate = NOT_IMPLEMENTED(\"ftruncate\");\nmodule.exports.ftruncateSync = NOT_IMPLEMENTED(\"ftruncateSync\");\nmodule.exports.futimes = NOT_IMPLEMENTED(\"futimes\");\nmodule.exports.futimesSync = NOT_IMPLEMENTED(\"futimesSync\");\n\nmodule.exports.lchmod = NOT_IMPLEMENTED(\"lchmod\");\nmodule.exports.lchmodSync = NOT_IMPLEMENTED(\"lchmodSync\");\nmodule.exports.lchown = NOT_IMPLEMENTED(\"lchown\");\nmodule.exports.lchownSync = NOT_IMPLEMENTED(\"lchownSync\");\n\nmodule.exports.link = NOT_IMPLEMENTED(\"link\");\n\nmodule.exports.linkSync = function (existingPath, newPath) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.linkItemAtPath_toPath_error(existingPath, newPath, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(existingPath, undefined, err.value());\n  }\n};\n\nmodule.exports.lstat = NOT_IMPLEMENTED(\"lstat\");\n\nmodule.exports.lstatSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.attributesOfItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n\n  return parseStat(result);\n};\n\nmodule.exports.mkdir = NOT_IMPLEMENTED(\"mkdir\");\n\nmodule.exports.mkdirSync = function (path, options) {\n  var mode = 0o777;\n  var recursive = false;\n  if (options && options.mode) {\n    mode = options.mode;\n  }\n  if (options && options.recursive) {\n    recursive = options.recursive;\n  }\n  if (typeof options === \"number\") {\n    mode = options;\n  }\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.createDirectoryAtPath_withIntermediateDirectories_attributes_error(\n    path,\n    recursive,\n    {\n      NSFilePosixPermissions: mode,\n    },\n    err\n  );\n\n  if (err.value() !== null) {\n    throw new Error(err.value());\n  }\n};\n\nmodule.exports.mkdtemp = NOT_IMPLEMENTED(\"mkdtemp\");\n\nmodule.exports.mkdtempSync = function (path) {\n  function makeid() {\n    var text = \"\";\n    var possible =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 6; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  var tempPath = path + makeid();\n  module.exports.mkdirSync(tempPath);\n  return tempPath;\n};\n\nmodule.exports.open = NOT_IMPLEMENTED(\"open\");\nmodule.exports.openSync = NOT_IMPLEMENTED(\"openSync\");\n\nmodule.exports.read = NOT_IMPLEMENTED(\"read\");\n\nmodule.exports.readdir = NOT_IMPLEMENTED(\"readdir\");\n\nmodule.exports.readdirSync = function (path, options) {\n  var encoding = encodingFromOptions(options, \"utf8\");\n  var fileManager = NSFileManager.defaultManager();\n  var paths = fileManager.subpathsAtPath(path);\n  var arr = [];\n  for (var i = 0; i < paths.length; i++) {\n    var pathName = paths[i];\n    arr.push(encoding === \"buffer\" ? Buffer.from(pathName) : String(pathName));\n  }\n  return arr;\n};\n\nmodule.exports.readFile = NOT_IMPLEMENTED(\"readFile\");\n\nmodule.exports.readFileSync = function (path, options) {\n  var encoding = encodingFromOptions(options, \"buffer\");\n  var fileManager = NSFileManager.defaultManager();\n  var data = fileManager.contentsAtPath(path);\n  if (!data) {\n    throw fsErrorForPath(path, false);\n  }\n\n  var buffer = Buffer.from(data);\n\n  if (encoding === \"buffer\") {\n    return buffer;\n  } else if (encoding === \"NSData\") {\n    return buffer.toNSData();\n  } else {\n    return buffer.toString(encoding);\n  }\n};\n\nmodule.exports.readlink = NOT_IMPLEMENTED(\"readlink\");\n\nmodule.exports.readlinkSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.destinationOfSymbolicLinkAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n\n  return String(result);\n};\n\nmodule.exports.readSync = NOT_IMPLEMENTED(\"readSync\");\n\nmodule.exports.realpath = NOT_IMPLEMENTED(\"realpath\");\nmodule.exports.realpath.native = NOT_IMPLEMENTED(\"realpath.native\");\n\nmodule.exports.realpathSync = function (path) {\n  return String(\n    NSString.stringWithString(path).stringByResolvingSymlinksInPath()\n  );\n};\n\nmodule.exports.realpathSync.native = NOT_IMPLEMENTED(\"realpathSync.native\");\n\nmodule.exports.rename = NOT_IMPLEMENTED(\"rename\");\n\nmodule.exports.renameSync = function (oldPath, newPath) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  fileManager.moveItemAtPath_toPath_error(oldPath, newPath, err);\n\n  var error = err.value();\n\n  if (error !== null) {\n    // if there is already a file, we need to overwrite it\n    if (\n      String(error.domain()) === \"NSCocoaErrorDomain\" &&\n      Number(error.code()) === 516\n    ) {\n      var err2 = MOPointer.alloc().init();\n      fileManager.replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error(\n        NSURL.fileURLWithPath(newPath),\n        NSURL.fileURLWithPath(oldPath),\n        null,\n        NSFileManagerItemReplacementUsingNewMetadataOnly,\n        null,\n        err2\n      );\n      if (err2.value() !== null) {\n        throw fsErrorForPath(oldPath, undefined, err2.value());\n      }\n    } else {\n      throw fsErrorForPath(oldPath, undefined, error);\n    }\n  }\n};\n\nmodule.exports.rmdir = NOT_IMPLEMENTED(\"rmdir\");\n\nmodule.exports.rmdirSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var isDirectory = module.exports.lstatSync(path).isDirectory();\n  if (!isDirectory) {\n    throw fsError(\"ENOTDIR\", {\n      path: path,\n      syscall: \"rmdir\",\n    });\n  }\n  fileManager.removeItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, true, err.value(), \"rmdir\");\n  }\n};\n\nmodule.exports.stat = NOT_IMPLEMENTED(\"stat\");\n\n// the only difference with lstat is that we resolve symlinks\n//\n// > lstat() is identical to stat(), except that if pathname is a symbolic\n// > link, then it returns information about the link itself, not the file\n// > that it refers to.\n// http://man7.org/linux/man-pages/man2/lstat.2.html\nmodule.exports.statSync = function (path) {\n  return module.exports.lstatSync(module.exports.realpathSync(path));\n};\n\nmodule.exports.symlink = NOT_IMPLEMENTED(\"symlink\");\n\nmodule.exports.symlinkSync = function (target, path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.createSymbolicLinkAtPath_withDestinationPath_error(\n    path,\n    target,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw new Error(err.value());\n  }\n};\n\nmodule.exports.truncate = NOT_IMPLEMENTED(\"truncate\");\n\nmodule.exports.truncateSync = function (path, len) {\n  var hFile = NSFileHandle.fileHandleForUpdatingAtPath(sFilePath);\n  hFile.truncateFileAtOffset(len || 0);\n  hFile.closeFile();\n};\n\nmodule.exports.unlink = NOT_IMPLEMENTED(\"unlink\");\n\nmodule.exports.unlinkSync = function (path) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var isDirectory = module.exports.lstatSync(path).isDirectory();\n  if (isDirectory) {\n    throw fsError(\"EPERM\", {\n      path: path,\n      syscall: \"unlink\",\n    });\n  }\n  var result = fileManager.removeItemAtPath_error(path, err);\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, false, err.value());\n  }\n};\n\nmodule.exports.unwatchFile = NOT_IMPLEMENTED(\"unwatchFile\");\n\nmodule.exports.utimes = NOT_IMPLEMENTED(\"utimes\");\n\nmodule.exports.utimesSync = function (path, aTime, mTime) {\n  var err = MOPointer.alloc().init();\n  var fileManager = NSFileManager.defaultManager();\n  var result = fileManager.setAttributes_ofItemAtPath_error(\n    {\n      NSFileModificationDate: aTime,\n    },\n    path,\n    err\n  );\n\n  if (err.value() !== null) {\n    throw fsErrorForPath(path, undefined, err.value());\n  }\n};\n\nmodule.exports.watch = NOT_IMPLEMENTED(\"watch\");\nmodule.exports.watchFile = NOT_IMPLEMENTED(\"watchFile\");\n\nmodule.exports.write = NOT_IMPLEMENTED(\"write\");\n\nmodule.exports.writeFile = NOT_IMPLEMENTED(\"writeFile\");\n\nmodule.exports.writeFileSync = function (path, data, options) {\n  var encoding = encodingFromOptions(options, \"utf8\");\n\n  var nsdata = Buffer.from(\n    data,\n    encoding === \"NSData\" || encoding === \"buffer\" ? undefined : encoding\n  ).toNSData();\n\n  nsdata.writeToFile_atomically(path, true);\n};\n\nmodule.exports.writeSync = NOT_IMPLEMENTED(\"writeSync\");\n","module.exports.parseStat = function parseStat(result) {\n  return {\n    dev: String(result.NSFileDeviceIdentifier),\n    // ino: 48064969, The file system specific \"Inode\" number for the file.\n    mode: result.NSFileType | result.NSFilePosixPermissions,\n    nlink: Number(result.NSFileReferenceCount),\n    uid: String(result.NSFileOwnerAccountID),\n    gid: String(result.NSFileGroupOwnerAccountID),\n    // rdev: 0, A numeric device identifier if the file is considered \"special\".\n    size: Number(result.NSFileSize),\n    // blksize: 4096, The file system block size for i/o operations.\n    // blocks: 8, The number of blocks allocated for this file.\n    atimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    mtimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    ctimeMs:\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000,\n    birthtimeMs:\n      Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000,\n    atime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ), // the 0.5 comes from the node source. Not sure why it's added but in doubt...\n    mtime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    ctime: new Date(\n      Number(result.NSFileModificationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    birthtime: new Date(\n      Number(result.NSFileCreationDate.timeIntervalSince1970()) * 1000 + 0.5\n    ),\n    isBlockDevice: function () {\n      return result.NSFileType === NSFileTypeBlockSpecial;\n    },\n    isCharacterDevice: function () {\n      return result.NSFileType === NSFileTypeCharacterSpecial;\n    },\n    isDirectory: function () {\n      return result.NSFileType === NSFileTypeDirectory;\n    },\n    isFIFO: function () {\n      return false;\n    },\n    isFile: function () {\n      return result.NSFileType === NSFileTypeRegular;\n    },\n    isSocket: function () {\n      return result.NSFileType === NSFileTypeSocket;\n    },\n    isSymbolicLink: function () {\n      return result.NSFileType === NSFileTypeSymbolicLink;\n    },\n  };\n};\n\nvar ERRORS = {\n  EPERM: {\n    message: \"operation not permitted\",\n    errno: -1,\n  },\n  ENOENT: {\n    message: \"no such file or directory\",\n    errno: -2,\n  },\n  EACCES: {\n    message: \"permission denied\",\n    errno: -13,\n  },\n  ENOTDIR: {\n    message: \"not a directory\",\n    errno: -20,\n  },\n  EISDIR: {\n    message: \"illegal operation on a directory\",\n    errno: -21,\n  },\n};\n\nfunction fsError(code, options) {\n  var error = new Error(\n    code +\n      \": \" +\n      ERRORS[code].message +\n      \", \" +\n      (options.syscall || \"\") +\n      (options.path ? \" '\" + options.path + \"'\" : \"\")\n  );\n\n  Object.keys(options).forEach(function (k) {\n    error[k] = options[k];\n  });\n\n  error.code = code;\n  error.errno = ERRORS[code].errno;\n\n  return error;\n}\n\nmodule.exports.fsError = fsError;\n\nmodule.exports.fsErrorForPath = function fsErrorForPath(\n  path,\n  shouldBeDir,\n  err,\n  syscall\n) {\n  var fileManager = NSFileManager.defaultManager();\n  var doesExist = fileManager.fileExistsAtPath(path);\n  if (!doesExist) {\n    return fsError(\"ENOENT\", {\n      path: path,\n      syscall: syscall || \"open\",\n    });\n  }\n  var isReadable = fileManager.isReadableFileAtPath(path);\n  if (!isReadable) {\n    return fsError(\"EACCES\", {\n      path: path,\n      syscall: syscall || \"open\",\n    });\n  }\n  if (typeof shouldBeDir !== \"undefined\") {\n    var isDirectory = require(\"./index\").lstatSync(path).isDirectory();\n    if (isDirectory && !shouldBeDir) {\n      return fsError(\"EISDIR\", {\n        path: path,\n        syscall: syscall || \"read\",\n      });\n    } else if (!isDirectory && shouldBeDir) {\n      return fsError(\"ENOTDIR\", {\n        path: path,\n        syscall: syscall || \"read\",\n      });\n    }\n  }\n  return new Error(err || \"Unknown error while manipulating \" + path);\n};\n\nmodule.exports.encodingFromOptions = function encodingFromOptions(\n  options,\n  defaultValue\n) {\n  return options && options.encoding\n    ? String(options.encoding)\n    : options\n    ? String(options)\n    : defaultValue;\n};\n\nmodule.exports.NOT_IMPLEMENTED = function NOT_IMPLEMENTED(name) {\n  return function () {\n    throw new Error(\n      \"fs.\" +\n        name +\n        \" is not implemented yet. If you feel like implementing it, any contribution will be gladly accepted on https://github.com/skpm/fs\"\n    );\n  };\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar sketchSpecifics = require('./sketch-specifics')\n\n// we only expose the posix implementation since Sketch only runs on macOS\n\nvar CHAR_FORWARD_SLASH = 47\nvar CHAR_DOT = 46\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot) {\n  var res = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var code\n  for (var i = 0; i <= path.length; i += 1) {\n    if (i < path.length) code = path.charCodeAt(i)\n    else if (code === CHAR_FORWARD_SLASH) break\n    else code = CHAR_FORWARD_SLASH\n    if (code === CHAR_FORWARD_SLASH) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (\n          res.length < 2 ||\n          lastSegmentLength !== 2 ||\n          res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n          res.charCodeAt(res.length - 2) !== CHAR_DOT\n        ) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/')\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = ''\n                lastSegmentLength = 0\n              } else {\n                res = res.slice(0, lastSlashIndex)\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/')\n              }\n              lastSlash = i\n              dots = 0\n              continue\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = ''\n            lastSegmentLength = 0\n            lastSlash = i\n            dots = 0\n            continue\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0) res += '/..'\n          else res = '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (res.length > 0) res += '/' + path.slice(lastSlash + 1, i)\n        else res = path.slice(lastSlash + 1, i)\n        lastSegmentLength = i - lastSlash - 1\n      }\n      lastSlash = i\n      dots = 0\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots\n    } else {\n      dots = -1\n    }\n  }\n  return res\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root\n  var base =\n    pathObject.base || (pathObject.name || '') + (pathObject.ext || '')\n  if (!dir) {\n    return base\n  }\n  if (dir === pathObject.root) {\n    return dir + base\n  }\n  return dir + sep + base\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = ''\n    var resolvedAbsolute = false\n    var cwd\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i -= 1) {\n      var path\n      if (i >= 0) {\n        path = arguments[i]\n      } else {\n        if (cwd === undefined) {\n          cwd = posix.dirname(sketchSpecifics.cwd())\n        }\n        path = cwd\n      }\n\n      path = sketchSpecifics.getString(path, 'path')\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue\n      }\n\n      resolvedPath = path + '/' + resolvedPath\n      resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute)\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0) return '/' + resolvedPath\n      else return '/'\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath\n    } else {\n      return '.'\n    }\n  },\n\n  normalize: function normalize(path) {\n    path = sketchSpecifics.getString(path, 'path')\n\n    if (path.length === 0) return '.'\n\n    var isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH\n    var trailingSeparator =\n      path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH\n\n    // Normalize the path\n    path = normalizeString(path, !isAbsolute)\n\n    if (path.length === 0 && !isAbsolute) path = '.'\n    if (path.length > 0 && trailingSeparator) path += '/'\n\n    if (isAbsolute) return '/' + path\n    return path\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    path = sketchSpecifics.getString(path, 'path')\n    return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH\n  },\n\n  join: function join() {\n    if (arguments.length === 0) return '.'\n    var joined\n    for (var i = 0; i < arguments.length; i += 1) {\n      var arg = arguments[i]\n      arg = sketchSpecifics.getString(arg, 'path')\n      if (arg.length > 0) {\n        if (joined === undefined) joined = arg\n        else joined += '/' + arg\n      }\n    }\n    if (joined === undefined) return '.'\n    return posix.normalize(joined)\n  },\n\n  relative: function relative(from, to) {\n    from = sketchSpecifics.getString(from, 'from path')\n    to = sketchSpecifics.getString(to, 'to path')\n\n    if (from === to) return ''\n\n    from = posix.resolve(from)\n    to = posix.resolve(to)\n\n    if (from === to) return ''\n\n    // Trim any leading backslashes\n    var fromStart = 1\n    for (; fromStart < from.length; fromStart += 1) {\n      if (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) break\n    }\n    var fromEnd = from.length\n    var fromLen = fromEnd - fromStart\n\n    // Trim any leading backslashes\n    var toStart = 1\n    for (; toStart < to.length; toStart += 1) {\n      if (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) break\n    }\n    var toEnd = to.length\n    var toLen = toEnd - toStart\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen\n    var lastCommonSep = -1\n    var i = 0\n    for (; i <= length; i += 1) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1)\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i)\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0\n          }\n        }\n        break\n      }\n      var fromCode = from.charCodeAt(fromStart + i)\n      var toCode = to.charCodeAt(toStart + i)\n      if (fromCode !== toCode) break\n      else if (fromCode === CHAR_FORWARD_SLASH) lastCommonSep = i\n    }\n\n    var out = ''\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; i += 1) {\n      if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n        if (out.length === 0) out += '..'\n        else out += '/..'\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0) return out + to.slice(toStart + lastCommonSep)\n    else {\n      toStart += lastCommonSep\n      if (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) toStart += 1\n      return to.slice(toStart)\n    }\n  },\n\n  toNamespacedPath: function toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path\n  },\n\n  dirname: function dirname(path) {\n    path = sketchSpecifics.getString(path, 'path')\n    if (path.length === 0) return '.'\n    var code = path.charCodeAt(0)\n    var hasRoot = code === CHAR_FORWARD_SLASH\n    var end = -1\n    var matchedSlash = true\n    for (var i = path.length - 1; i >= 1; i -= 1) {\n      code = path.charCodeAt(i)\n      if (code === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i\n          break\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.'\n    if (hasRoot && end === 1) return '//'\n    return path.slice(0, end)\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined)\n      ext = sketchSpecifics.getString(ext, 'ext')\n    path = sketchSpecifics.getString(path, 'path')\n\n    var start = 0\n    var end = -1\n    var matchedSlash = true\n    var i\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return ''\n      var extIdx = ext.length - 1\n      var firstNonSlashEnd = -1\n      for (i = path.length - 1; i >= 0; i -= 1) {\n        var code = path.charCodeAt(i)\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false\n            firstNonSlashEnd = i + 1\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1\n              end = firstNonSlashEnd\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd\n      else if (end === -1) end = path.length\n      return path.slice(start, end)\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1\n            break\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false\n          end = i + 1\n        }\n      }\n\n      if (end === -1) return ''\n      return path.slice(start, end)\n    }\n  },\n\n  extname: function extname(path) {\n    path = sketchSpecifics.getString(path, 'path')\n    var startDot = -1\n    var startPart = 0\n    var end = -1\n    var matchedSlash = true\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i)\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i\n        else if (preDotState !== 1) preDotState = 1\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 ||\n      end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n    ) {\n      return ''\n    }\n    return path.slice(startDot, end)\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new Error('pathObject should be an Object')\n    }\n    return _format('/', pathObject)\n  },\n\n  parse: function parse(path) {\n    path = sketchSpecifics.getString(path, 'path')\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' }\n    if (path.length === 0) return ret\n    var code = path.charCodeAt(0)\n    var isAbsolute = code === CHAR_FORWARD_SLASH\n    var start\n    if (isAbsolute) {\n      ret.root = '/'\n      start = 1\n    } else {\n      start = 0\n    }\n    var startDot = -1\n    var startPart = 0\n    var end = -1\n    var matchedSlash = true\n    var i = path.length - 1\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i)\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1\n          break\n        }\n        continue\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false\n        end = i + 1\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i\n        else if (preDotState !== 1) preDotState = 1\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1\n      }\n    }\n\n    if (\n      startDot === -1 ||\n      end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n    ) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute)\n          ret.base = ret.name = path.slice(1, end)\n        else ret.base = ret.name = path.slice(startPart, end)\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot)\n        ret.base = path.slice(1, end)\n      } else {\n        ret.name = path.slice(startPart, startDot)\n        ret.base = path.slice(startPart, end)\n      }\n      ret.ext = path.slice(startDot, end)\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1)\n    else if (isAbsolute) ret.dir = '/'\n\n    return ret\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null,\n\n  resourcePath: sketchSpecifics.resourcePath,\n}\n\nmodule.exports = posix\nmodule.exports.posix = posix\n","var util = require('util')\n\nmodule.exports.getString = function getString(path, argumentName) {\n  if (!util.isString(path)) {\n    // let's make a special case for NSURL\n    if (util.getNativeClass(path) === 'NSURL') {\n      return String(path.path().copy())\n    }\n    throw new Error(argumentName + ' should be a string. Got ' + typeof path + ' instead.')\n  }\n  return String(path)\n}\n\nmodule.exports.cwd = function cwd() {\n  if (typeof __command !== 'undefined' && __command.script() && __command.script().URL()) {\n    return String(__command.script().URL().path().copy())\n  }\n  return String(MSPluginManager.defaultPluginURL().path().copy())\n}\n\nmodule.exports.resourcePath = function resourcePath(resourceName) {\n  if (typeof __command === 'undefined' || !__command.pluginBundle()) {\n    return undefined\n  }\n  var resource = __command.pluginBundle().urlForResourceNamed(resourceName)\n  if (!resource) {\n    return undefined\n  }\n  return String(resource.path())\n}\n","// require(\"@babel/polyfill\");\n\nvar sketch = require('sketch')\nvar Document = require('sketch/dom').Document\nvar document = Document.getSelectedDocument()\n\n\n\nconst Shape = require('sketch/dom').Shape\nconst Text = require('sketch/dom').Text\nconst Group = require('sketch/dom').Group\n\n\nconst page = MSDocument.currentDocument().currentPage();\n\nconst fs = require('@skpm/fs');\nconst path = require('@skpm/path');\nconst home = require(\"os\").homedir();\n\n\nconst doc = context.document\nconst folderName = `${new Date().toISOString().replace(/[^0-9]/g, \"\")}_${doc.fileURL().path().lastPathComponent().replace('.sketch','')}`\n\n\nconst mainFolder = `${home}/NewsKit Theme Exports/`\nif (!fs.existsSync(mainFolder)) {\n  fs.mkdirSync(mainFolder);\n}\nconst exportPath = `${mainFolder}${folderName}/`\n\n\nvar texts = []\nvar paints = []\nvar shadows = []\nvar blurs = []\nvar output = {}\n\n\n//NewsKit Constants\nconst DEFAULT_FONT_SIZE = 16\nconst gridSize = 4\n\nvar colorPalette = {}\n\nvar crops = {}\n\n\n\n// When we run the plugin.\nexport default function () {\n\n// //Make a sheet to block user input whilst the script runs.\n// //it doesn't take that long, but it's helpful to show something when everything is a task in the background.\n// let document = sketch.getSelectedDocument()\n// let documentWindow = document.sketchObject.windowControllers()[0].window()\n\n// let mySheetWindow = NSWindow.alloc().initWithContentRect_styleMask_backing_defer(\n//     NSMakeRect(0, 0, 400, 80),\n//     (NSWindowStyleMaskTitled | NSWindowStyleMaskDocModalWindow),\n//     NSBackingStoreBuffered,\n//     true\n// )\n// let progressView = NSProgressIndicator\n//     .alloc()\n//     .initWithFrame(NSMakeRect(20, 20, 360, 12))\n// progressView.setControlTint(NSBlueControlTint)\n// progressView.startAnimation(true)\n\n// var title = NSTextView.alloc().initWithFrame(NSMakeRect(20,34,360,20))\n//     title.string = 'Exporting Styles'\n//     title.drawsBackground = false;\n//     title.editable = false;\n//     title.setAlignment(2)\n\n// mySheetWindow.contentView().addSubview(progressView)\n// mySheetWindow.contentView().addSubview(title)\n\n// documentWindow.beginSheet_completionHandler(mySheetWindow, nil)\n// //Run this when it's all done\n// //    documentWindow.endSheet(mySheetWindow)\n\n\n\n\n\n\n  //===============\n  // Border Radius\n  //==============\n  var shapeDefault = findArtboardsNamed(\"02 Theme defaults/04 Shape/borderRadiusDefault\")[0].layers()[0].cornerRadiusString() + 'px'\n\n\n  const BORDER_RADIUS = {\n    \"borderRadiusDefault\": shapeDefault\n\n  }\n\n  //=====================\n  // Color Primitives\n  //=====================\n\n  /* Get the primitive colors that form all the foundations */\n\n  var colorStyles = getSharedStyles(0).filter(style => \n                                                style.name().includes('Palette') && !style.name().includes('border') && !style.name().includes('_null')\n                                                )\n\n\n        colorStyles.forEach(style => {\n          var value\n          var name = style.name().split('/')[style.name().split('/').length - 1]\n          let fills = style.style().fills()\n          if (!fills.length) {\n            value = \"transparent\"\n          } else {\n            let fill = fills[0]\n            if (fill.fillType() == 0) {\n              value = MSColorToRGBA(fill.color())\n            } else {\n              //gradients.push({'name':name,'gradient':fill.gradient()})\n              value = parseGradient(fill.gradient())\n            }\n          }\n          colorPalette[name] = value\n        })\n\n\n\n\n\n  /* Get the theme colors */\n\n  //Filter out styles that aren't fills.\n  const regex = RegExp('(0[12345])', 'g')\n  var themeColors = getSharedStyles(0).filter(style =>\n    style.name().split('/')[0] &&\n    !style.name().includes('border') &&\n    !style.name().includes('Shadows') &&\n    !style.name().includes('Overlays') &&\n    !style.name().includes('Images') &&\n    !style.name().includes('Palette') &&\n    !style.name().includes('_null')\n  )\n\n  var outputThemeColors = {}\n\n  themeColors.forEach(style => {\n\n    let value\n    var name = style.name().split('/')[style.name().split('/').length - 1]\n    let fills = style.style().fills()\n    if (!fills.length) {\n      value = \"transparent\"\n    } else {\n      let fill = fills[0]\n      if (fill.fillType() == 0) {\n        value = getPrimitiveFromColor(fill.color(), name)\n      } else {\n        value = parseGradient(fill.gradient())\n      }\n    }\n\n    value == \"transparent\" ? outputThemeColors[\"transpareent\"] = \"transparent\" : outputThemeColors[name] = `{{colors.${value}}}`\n  })\n\n  function getPrimitiveFromColor(color, name) {\n    let c = MSColorToRGBA(color)\n    let prim = getKeyByValue(colorPalette, c)\n    return prim\n  }\n\n  function getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n\n\n\n  ///=====================\n  // Blurs and Shadows\n\n  ///////////////////////\n\n  var shadowsOutput = {}\n\n  var shadowStyles = getSharedStyles(0).filter(style => style.name().includes('Shadows'))\n\n  shadowStyles.forEach(style => {\n    let tokenName = style.name().split('/')[1]\n\n    var layer = new Shape({\n      name: 'my shape',\n      style: style.style(),\n      parent: page\n    })\n\n    var predicate = NSPredicate.predicateWithFormat(\"objectID == %@\", layer.id)\n    var result = page.children().filteredArrayUsingPredicate(predicate);\n    let shadowLayer = result[0]\n\n    var shadow = shadowLayer.CSSAttributes()[1].replace('box-shadow: ', '')\n\n    layer.remove()\n\n    shadowsOutput[tokenName] = `${shadow}`\n\n  })\n\n\n\n\n  /*\n  Blur effects, this isn't the best implementation.. NewsKit was built on top of Sketch's implementations,\n  Blurs aren't fully accounted for in NewsKit\n  Sketch Types\n  0 Gaussian (Figma Layer Blur)\n  1 Motion (Unsupported in Figma)\n  2 Zoom  (Unsuppoted in Figma)\n  3 Background\n  \n\n  Needs adjusting for NewsKit. No sensible way of handling blurs in newskit as of yet.\n\n  */\n\n  var blurStyles = getSharedStyles(0).filter(style => style.style().blur().isEnabled() == 1 && !style.name().includes('border'))\n  blurStyles.forEach(style => {\n    let inp = style.style().blur()\n\n    let o = {}\n    o.type = \"EFFECT\"\n    //Need a better Naming System here...\n    o.name = 'Blur/' + style.name()\n    o.effects = []\n    let e = {}\n    switch (inp.type()) {\n      case 0:\n        e.type = \"LAYER_BLUR\"\n        break;\n      case 1:\n        console.warn('Motion Blurs are unsupported by Figma')\n        break;\n      case 2:\n        console.warn('Zoom Blurs are unsupported by Figma')\n        break;\n      case 3:\n        e.type = \"BACKGROUND_BLUR\"\n        break;\n    }\n    e.visible = true\n    e.radius = inp.radius()\n\n    //Saturation is not yet supported for background blurs in Figma..\n    //inp.saturation() ? e.saturation = inp.saturation() : null\n\n    o.effects.push(e)\n    blurs.push(o)\n  })\n\n\n\n  //=====================\n  /// Overlays\n  //=====================\n\n  var overlayStyles = getSharedStyles(0).filter(style => style.name().includes('Overlays') && !style.name().includes('border'))\n  var overlaysOutput = {}\n\n  overlayStyles.forEach(style => {\n    var value\n    var name = style.name().split('/')[style.name().split('/').length - 1]\n    let fills = style.style().fills()\n    if (!fills.length) {\n      value = \"transparent\"\n    } else {\n      let fill = fills[0]\n      if (fill.fillType() == 0) {\n        value = MSColorToRGBA(fill.color())\n      } else {\n        //gradients.push({'name':name,'gradient':fill.gradient()})\n        value = parseGradient(fill.gradient())\n      }\n    }\n    overlaysOutput[name] = value\n  })\n\n\n\n\n\n\n\n\n\n  //==============================================\n  /*Text Styles*/\n  //Newskit defaults, if a brand's using letter spacing that isnt covered here, they're making everyone's life difficult.\n  const LETTER_SPACING = {\n    \"fontLetterSpacing010\": -0.5,\n    \"fontLetterSpacing020\": -0.25,\n    \"fontLetterSpacing030\": 0,\n    \"fontLetterSpacing040\": 0.25,\n    \"fontLetterSpacing050\": 0.5,\n    \"fontLetterSpacing060\": 0.75,\n    \"fontLetterSpacing070\": 1\n  }\n\n\n\n  // A lot of this stuff could probably be removed... but its useful if we ever wanted to define font-families properly.\n  //From @airbnb/react-sketch\n  //Sketch gives a float for fontWeight, \n  const FONT_WEIGHTS = {\n    ultralight: -0.8,\n    '100': -0.8,\n    thin: -0.6,\n    '200': -0.6,\n    light: -0.4,\n    '300': -0.4,\n    normal: 0,\n    regular: 0,\n    '400': 0,\n    semibold: 0.23,\n    demibold: 0.23,\n    '500': 0.23,\n    '600': 0.3,\n    bold: 0.4,\n    '700': 0.4,\n    extrabold: 0.56,\n    ultrabold: 0.56,\n    heavy: 0.56,\n    '800': 0.56,\n    black: 0.62,\n    '900': 0.62,\n  };\n  //Extract out only CSS numbers\n  const FONT_WEIGHTS_NUMBER = {\n    '-0.8': 100,\n    '-0.6': 200,\n    '-0.4': 300,\n    '0':    400,\n    '0.23': 500,\n    '0.3':  600,\n    '0.4':  700,\n    '0.56': 800,\n    '0.62': 900\n  }\n  //Map CSS font-weight to a NewsKit token\n  const fontWeightTokens = {\n    'fontWeight010': 100,\n    'fontWeight020': 200,\n    'fontWeight030': 300,\n    'fontWeight040': 400,\n    'fontWeight050': 500,\n    'fontWeight060': 600,\n    'fontWeight070': 700,\n    'fontWeight080': 800,\n    'fontWeight090': 900,\n  }\n\n  //from @airbnb/react-sketch\n  //Return booleans of font-style and font-stretch\n  const isItalicFont = (font) => {\n    const traits = font.fontDescriptor().objectForKey(NSFontTraitsAttribute);\n    const symbolicTraits = traits[NSFontSymbolicTrait].unsignedIntValue();\n    return (symbolicTraits & NSFontItalicTrait) !== 0;\n  };\n  const isCondensedFont = (font) => {\n    const traits = font.fontDescriptor().objectForKey(NSFontTraitsAttribute);\n    const symbolicTraits = traits[NSFontSymbolicTrait].unsignedIntValue();\n    return (symbolicTraits & NSFontCondensedTrait) !== 0;\n  };\n  const weightOfFont = (font) => {\n    const traits = font.fontDescriptor().objectForKey(NSFontTraitsAttribute);\n    const weight = traits[NSFontWeightTrait].doubleValue();\n    if (weight === 0.0) {\n      const weights = Object.keys(FONT_WEIGHTS);\n      const fontName = String(font.fontName()).toLowerCase();\n      const matchingWeight = weights.find((w) => fontName.endsWith(w));\n      if (matchingWeight) {\n        return FONT_WEIGHTS[matchingWeight];\n      }\n    }\n    return weight;\n  };\n\n\n  var textStyles = getSharedStyles(1)\n  textStyles = textStyles.filter(style => style.name().includes('inkBase') && document.getSharedTextStyleWithID(style.objectID()).style.alignment == 'left')\n\n\n  var fontSizesArr = []\n\n  var lineHeightsArr = []\n  var fontWeightsArr = []\n  var fontFamiliesArr = []\n\n  var fontFiles = new Set()\n\n  //Establish all the primitive values\n\n  textStyles.forEach(style => {\n\n    //Sketch has values in different places\n    let textStyle = document.getSharedTextStyleWithID(style.objectID()).style\n    let font = style.value().primitiveTextStyle().attributes()[NSFont]\n\n    //Font Family\n    //fontFamiliesArr.push(font.familyName()) -- \"The Sun way of doing things\"\n    fontFamiliesArr.push(font.fontName()) // \"The Times way\"\n\n\n    //Font Size\n    let fontSizePx = textStyle.fontSize\n    fontSizesArr.push(fontSizePx)\n\n\n    let lineHeight = textStyle.lineHeight //Actual LineHeight(px) test against this to get a rem value\n\n\n    var adjLineHeight = 0\n    var outputRem = 0\n\n    const inc = 1 / 24 // Catch eighths and sixths\n\n    for (var rem = 1; rem <= 4; rem += inc) {\n\n      let estLineHeight = rem * fontSizePx\n\n      //from: ncu-newskit/src/utils/font-sizing.ts \n      var adjLineHeight = (Math.round((estLineHeight * fontSizePx) / gridSize) * gridSize) / fontSizePx;\n\n      if (adjLineHeight == lineHeight) {\n        outputRem = Number(rem.toFixed(4))\n\n        //If the lineHeight (rem) matches up to the value after rounding to gridSize \n        lineHeightsArr.push(outputRem)\n        break;\n      }\n      if (rem == 4) {\n        console.error(\"Couldn't find a line height (probably not a multiple of gridSize)\",\n          fontSizePx,\n          lineHeight)\n      }\n    }\n\n\n    let w = FONT_WEIGHTS_NUMBER[`${weightOfFont(font)}`]\n    if (fontWeightsArr.indexOf(w) < 0) {\n      fontWeightsArr.push(w)\n    }\n\n  })\n\n\n  //The output Object\n  var fonts = {\n  \n  }\n  \n  //used for value lookups. Not the tidiest method..\n  var textPrimitives = {\n    fontSize: {},\n    lineHeight: {},\n    fontWeight: {},\n    letterSpacing: {}\n  }\n\n  fontWeightsArr = fontWeightsArr.unique().sort()\n  fontSizesArr = fontSizesArr.unique().sort()\n  lineHeightsArr = lineHeightsArr.unique().sort()\n  fontFamiliesArr = fontFamiliesArr.unique().sort()\n\n\n\n\n  fontFamiliesArr.forEach((fam, idx) => {\n    let cfg = getCropsForFontFamily(fam)\n    let tokenName = 'fontFamily' + tokenFormat(idx + 1)\n    \n    fonts[tokenName] = {\n      'fontFamily': `${cfg.family}`,\n      'cropConfig': {}\n    }\n\n    fonts[tokenName]['cropConfig'] = {\n      'top': cfg.top,\n      'bottom': cfg.bottom,\n      'defaultLineHeight': cfg.defaultLineHeight\n    }\n  })\n\n\n  function getCropsForFontFamily(fontFamily) {\n\n    let family = fontFamily\n    let size = DEFAULT_FONT_SIZE //16px = 1rem // set it to 1 to get it in px\n\n    //Create a new text layer, we use capital T to get the cap height. \n    var text = new Text({\n      text: \"T\",\n      parent: page\n    })\n\n    //Get an actual layer for that text layer, and not just a text object.\n    var predicate = NSPredicate.predicateWithFormat(\"objectID == %@\", text.id)\n    var result = page.children().filteredArrayUsingPredicate(predicate);\n    let textLayer = result[0] \n\n    //Set the styles\n    textLayer.fontPostscriptName = family\n    textLayer.fontSize = size\n\n    //Get the default line height\n    let defaultLineHeight = getDefaultLineHeightForFont(textLayer.fontPostscriptName(), textLayer.fontSize())\n    let defaultLineHeightEm = defaultLineHeight / size\n\n\n    let bounds = textLayer.pathInFrame().bounds()   \n    let t = -bounds.origin.y / size\n    let b = -((defaultLineHeight - bounds.size.height) - bounds.origin.y) / size\n\n\n    text.remove() //Delete the temporary layer.\n\n    crops[fontFamily] = {'top': t, 'bottom': b, 'defaultLineHeight': defaultLineHeightEm}\n\n    return {\n      'family': fontFamily,\n      'top': t,\n      'bottom': b,\n      'defaultLineHeight': defaultLineHeightEm\n    }\n  }\n\n  function getDefaultLineHeightForFont(fontFamily, size) {\n    let font = NSFont.fontWithName_size(fontFamily, size);\n    let lm = NSLayoutManager.alloc().init();\n    return lm.defaultLineHeightForFont(font);\n  }\n\n\n\n  fontWeightsArr.forEach((value, index) => {\n    let tokenName = 'fontWeight' + tokenFormat(index + 1)\n    //Commented out, tokens all just sit under a {{font}} object..\n    textPrimitives['fontWeight'][tokenName] = value\n    fonts[tokenName] = value\n  })\n\n  fontSizesArr.forEach((value, index) => {\n    let tokenName = 'fontSize' + tokenFormat(index + 1)\n    textPrimitives['fontSize'][tokenName] = value\n    fonts[tokenName] = value\n  })\n\n  lineHeightsArr.forEach((value, index) => {\n    let tokenName = 'fontLineHeight' + tokenFormat(index + 1)\n    textPrimitives['lineHeight'][tokenName] = value\n    fonts[tokenName] = value\n  })\n\n textPrimitives['letterSpacing'] = LETTER_SPACING\n\n  fonts  = {...fonts, ...LETTER_SPACING}\n\n  // fontLetterSpacing.forEach((value, index) => {\n  //   let tokenName = 'fontLetterSpacing' + tokenFormat(index + 1)\n  //   textPrimitives['fontLetterSpacing'][tokenName] = value\n  // })\n\n  var textStylesOutput = {}\n\n  textStyles.forEach(style => {\n\n    //output object\n    var o = {}\n\n    let cropProps = {}\n\n    //Get the token name for the text styles\n    \n    let n = style.name().split('/')[0].toLowerCase().includes(\"utility\") ? style.name().split('/')[2] : style.name().split('/')[1]\n\n    //Sketch has values in different places\n    let textStyle = document.getSharedTextStyleWithID(style.objectID()).style\n    let font = style.value().primitiveTextStyle().attributes()[NSFont]\n\n    //Export the files used in the styles.\n    fontFiles.add(path.resolve(font.fileURL().path()))\n\n    //Size\n    var fontSizePx = textStyle.fontSize\n    o.fontSize = `{{fonts.${textPrimitives.fontSize.getKeyByValue(textStyle.fontSize)}}}`\n\n    cropProps.size = textStyle.fontSize / DEFAULT_FONT_SIZE\n\n    //lineHeight - Rounded to grid size\n    var lineHeightPx = textStyle.lineHeight\n    Object.entries(textPrimitives.lineHeight).forEach(lineHeight => {\n      let estLineHeight = lineHeight[1]\n      //from: ncu-newskit/src/utils/font-sizing.ts \n      var adjLineHeightPx = (Math.round((estLineHeight * fontSizePx) / gridSize) * gridSize);\n      if (adjLineHeightPx == lineHeightPx) {\n        o.lineHeight = `{{fonts.${lineHeight[0]}}}`\n\n        cropProps.lineHeight = adjLineHeightPx / DEFAULT_FONT_SIZE\n\n      }\n    })\n\n\n    // o.fontFamily = textPrimitives.fontFamily.getKeyByValue(`${font.fontName()}`) //e.g 'The Sun'\n    // //o.typeName = `${font.typeName()}` // e.g 'Heavy Narrow'\n\n\n    //Font Family\n    let familyObj = Object.values(fonts).find(item => item.fontFamily === `${font.fontName()}`)\n\n    let familyKey = fonts.getKeyByValue(familyObj)\n    o.fontFamily = `{{fonts.${familyKey}.fontFamily}}`\n\n    //BACK UP!!\n    // let familyObj = Object.values(fonts.fontFamily).find(item => item.fontFamily === `${font.fontName()}`)\n\n    // let familyKey = fonts.fontFamily.getKeyByValue(familyObj)\n    // o.fontFamily = `{{fonts.${familyKey}}}`\n\n\n    let w = FONT_WEIGHTS_NUMBER[`${weightOfFont(font)}`]\n    o.fontWeight = `{{fonts.${textPrimitives.fontWeight.getKeyByValue(w)}}}`\n\n\n    //Useful Stuff for if we want to do font families the 'right' way\n    // o.fontStretch = isCondensedFont(font) ? 'condensed' : 'normal'\n    // o.fontStyle = isItalicFont(font) ? 'italic' : 'normal'\n    // o.textDecorationLine = textStyle.textUnderline ? 'underline' : 'none'\n    \n\n    let kerning = textStyle.kerning || 0\n\n    o.letterSpacing = `{{fonts.${textPrimitives.letterSpacing.getKeyByValue(kerning)}}}`\n\n\n    //Calculate the font cropping\n    let cc = crops[`${font.fontName()}`]\n\n    let deltaLineHeight = cropProps.lineHeight - cc.defaultLineHeight\n\n    // o.cropConfig = {}\n    // console.log(cc.top, cc.bottom, deltaLineHeight, cropProps.lineHeight, cc.defaultLineHeight)\n\n    // let top = parseFloat(cc.top) - parseFloat(deltaLineHeight/2)\n    // let bottom = parseFloat(cc.bottom) - parseFloat(deltaLineHeight/2)\n\n    // o.cropConfig.cropTop = `${top}`\n    // o.cropConfig.cropBottom =  `${bottom}`\n\n    textStylesOutput[n] = o //Add the token to the output\n\n  })\n\n\n\n\n\n\n\nexportFiles()\n\nfunction exportFiles(){\n\n  if (!fs.existsSync(exportPath)) {\n    fs.mkdirSync(exportPath);\n  }\n  if (!fs.existsSync(exportPath + '/fonts')) {\n    fs.mkdirSync(exportPath + '/fonts');\n  }\n\n\n  //Copy all the fonts\n  fontFiles.forEach(file => {\n\n    try {\n      fs.copyFileSync(file, exportPath + 'fonts/' + path.basename(file))\n    } catch (err) {\n      console.error(err)\n    }\n  })\n\n  try {\n    fs.writeFileSync(exportPath + 'fonts.json', prettifyJSON(fonts, 1))\n  } catch (err) {\n    console.error(err)\n  }\n  // // Colors are now wrapped into one colors.json file. So this code is no longer needed.\n  // try {\n  //   fs.writeFileSync(exportPath + 'color-palette.json', JSON.stringify(colorPalette, null, 4));\n  // } catch (err) {\n  //   // An error occurred\n  //   console.error(err);\n  // }\n  // try {\n  //   fs.writeFileSync(exportPath + 'theme-colors.json', JSON.stringify(outputThemeColors, null, 4));\n  // } catch (err) {\n  //   // An error occurred\n  //   console.error(err);\n  // }\n\n  try {\n    fs.writeFileSync(exportPath + 'colors.json', prettifyJSON({...colorPalette, ...outputThemeColors}))\n  } catch (err) {\n    console.error(err)\n  }\n\n  try {\n    fs.writeFileSync(exportPath + 'typography-presets.json', JSON.stringify(textStylesOutput, null, 4));\n  } catch (err) {\n    // An error occurred\n    console.error(err);\n  }\n\n  try {\n    fs.writeFileSync(exportPath + 'border-radius.json', JSON.stringify(BORDER_RADIUS, null, 4))\n  } catch (err) {\n    console.error(err)\n  }\n\n  try {\n    fs.writeFileSync(exportPath + 'overlays.json', JSON.stringify(overlaysOutput, null, 4))\n  } catch (err) {\n    console.error(err)\n  }\n  \n\n  try {\n    fs.writeFileSync(exportPath + 'shadows.json', JSON.stringify(shadowsOutput, null, 4))\n  } catch (err) {\n    console.error(err)\n  }\n\n\n  \n  //documentWindow.endSheet(mySheetWindow) //Remove the progress bar\n  sketch.UI.message('Exported Styles to: ' + exportPath) //Tell the user where it exported to.\n\n}\n\n\n}\n\n\n\n\n\n\n\n//===================================================\n// Utility functions.\n//I should probably take these out and import them.\n// Oh well.\n//===================================================\n\n//Convert sketch's colors into CSS RGBA\nfunction MSColorToRGBA(c) {\n  return `rgba(${Math.round(c.red() * 255)}, ${Math.round(c.green() * 255)}, ${Math.round(c.blue() * 255)}, ${c.alpha()})`\n}\n\n//Used for gradients, to know what direction they face.\nfunction angleBetween(p1, p2) {\n  let angleDeg = Math.atan2(p2.y - p1.y, p2.x - p1.x) * 180 / Math.PI;\n  return Math.round(angleDeg)\n}\n\n//Return a CSS string for some gradient stuff.\nfunction parseGradient(gradient) {\n\n  let angle = angleBetween(gradient.from(), gradient.to())\n  let type\n  switch (gradient.gradientType()) {\n    case 0:\n      type = \"linear-gradient\"\n      break;\n    case 1:\n      type = \"radial-gradient\"\n      break;\n    case 2:\n      type = \"angular-gradient\"\n      break;\n  }\n\n  let stops = gradient.stops()\n  let str = []\n  stops.forEach(stop => {\n\n    //We wanted to have gradients be made up of two tokens, but alpha values made things awkard.\n    // let colorToken = colorPalette.getKeyByValue(`${MSColorToRGBA(stop.color())}`)\n    // str.push(` ${colorToken} ${(stop.position().toFixed(4)*100)}%`)\n\n    str.push(` ${MSColorToRGBA(stop.color())} ${(stop.position().toFixed(4)*100)}%`)\n\n\n  })\n\n  let output = `${type}(${angle}deg,${str.join(',')})`\n\n  return output\n}\n\n\n//https://gist.github.com/abynim/e2df3ea4dc9ede209cc0\n//https://gist.github.com/abynim/4e1d4754f990cfc933ae\n//Search Through sketch documents for stuff.\n\n\n\nvar findLayersMatchingPredicate_inContainer_filterByType = function (predicate, container, layerType) {\n  var scope;\n  switch (layerType) {\n    case MSPage:\n      scope = doc.pages()\n      return scope.filteredArrayUsingPredicate(predicate)\n      break;\n\n    case MSArtboardGroup:\n      if (typeof container !== 'undefined' && container != nil) {\n        if (container.className == \"MSPage\") {\n          scope = container.artboards()\n          return scope.filteredArrayUsingPredicate(predicate)\n        }\n      } else {\n        // search all pages\n        var filteredArray = NSArray.array()\n        var loopPages = doc.pages().objectEnumerator(),\n          page;\n        while (page = loopPages.nextObject()) {\n          scope = page.artboards()\n          filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n        }\n        return filteredArray\n      }\n      break;\n\n    default:\n      if (typeof container !== 'undefined' && container != nil) {\n        scope = container.children()\n        return scope.filteredArrayUsingPredicate(predicate)\n      } else {\n        // search all pages\n        var filteredArray = NSArray.array()\n        var loopPages = doc.pages().objectEnumerator(),\n          page;\n        while (page = loopPages.nextObject()) {\n          scope = page.children()\n          filteredArray = filteredArray.arrayByAddingObjectsFromArray(scope.filteredArrayUsingPredicate(predicate))\n        }\n        return filteredArray\n      }\n  }\n  return NSArray.array() // Return an empty array if no matches were found\n}\n\nvar findFirstLayerMatchingPredicate_inContainer_filterByType = function (predicate, container, layerType) {\n  var filteredArray = findLayersMatchingPredicate_inContainer_filterByType(predicate, container, layerType)\n  return filteredArray.firstObject()\n}\nvar findLayersNamed_inContainer_filterByType = function (layerName, container, layerType) {\n  var predicate = (typeof layerType === 'undefined' || layerType == nil) ? NSPredicate.predicateWithFormat(\"name == %@\", layerName) : NSPredicate.predicateWithFormat(\"name == %@ && class == %@\", layerName, layerType)\n  return findLayersMatchingPredicate_inContainer_filterByType(predicate, container)\n}\n\nvar findPagesNamed = function (pageName) {\n  var predicate = NSPredicate.predicateWithFormat(\"name == %@\", pageName)\n  return findLayersMatchingPredicate_inContainer_filterByType(predicate, nil, MSPage)\n}\n\n\nvar findArtboardsNamed = function (artboardName) {\n  var predicate = NSPredicate.predicateWithFormat(\"name == %@\", artboardName)\n  return findLayersMatchingPredicate_inContainer_filterByType(predicate, nil, MSArtboardGroup)\n}\n\n///Rectangle handlers.\nvar lib = {}\nlib.CGSizeToObj = function (size) {\n  return {\n    width: size.width,\n    height: size.height\n  }\n};\n\nlib.CGRectToObj = function (rect) {\n  var origin = rect.origin;\n  var size = rect.size;\n  return {\n    x: origin.x,\n    y: origin.y,\n    width: size.width,\n    height: size.height\n  };\n};\n\n/*\n Sketch's document.getTextStyles() doesn't return all the info, and returns an MSArray\n \n Types:\n 0 layerStyles\n 1 textStyles\n \n Returns a JavaScript Array of styles\n */\nfunction getSharedStyles(type) {\n  var myStyles = []\n  if (sketch.version.sketch < 52) {\n    var styles = (type == 0) ? MSDocument.currentDocument().documentData().layerStyles().objects() : MSDocument.currentDocument().documentData().layerTextStyles().objects();\n  } else {\n    var styles = (type == 0) ? MSDocument.currentDocument().documentData().allLayerStyles() : MSDocument.currentDocument().documentData().allTextStyles();\n  }\n\n  var sortByName = NSSortDescriptor.sortDescriptorWithKey_ascending(\"name\", 1);\n  styles = styles.sortedArrayUsingDescriptors([sortByName]);\n  styles.forEach(style => {\n    myStyles.push(style)\n  })\n  return myStyles;\n}\n\n//Function to pad numbers into token form. eg: 1 becomes 010, 4.5 becomes 045\nvar tokenFormat = function (number) {\n  return new Array(+3 + 1 - (number * 10 + '').length).join('0') + number * 10;\n}\n\n\n//Sketch Scripts don't support Set(), we can fix this with a plugin and polyfills though...\nArray.prototype.contains = function (v) {\n  for (var i = 0; i < this.length; i++) {\n    if (this[i] === v) return true;\n  }\n  return false;\n};\n\nArray.prototype.unique = function () {\n  var arr = [];\n  for (var i = 0; i < this.length; i++) {\n    if (!arr.contains(this[i])) {\n      arr.push(this[i]);\n    }\n  }\n  return arr;\n}\n\n//Get Object Key by value, to map each style to primitives\nObject.prototype.getKeyByValue = function (value) {\n  for (var prop in this) {\n    if (this.hasOwnProperty(prop)) {\n      if (this[prop] === value)\n        return prop;\n    }\n  }\n}\n\n//Split camelCase into words[]\nfunction splitWords(s) {\n    var re, match, output = [];\n    // re = /[A-Z]?[a-z]+/g\n    re = /([A-Za-z]?)([a-z]+)/g;\n\n    /*\n    matches example: \"oneTwoThree\"\n    [\"one\", \"o\", \"ne\"]\n    [\"Two\", \"T\", \"wo\"]\n    [\"Three\", \"T\", \"hree\"]\n    */\n\n    match = re.exec(s);\n    while (match) {\n        // output.push(match.join(\"\"));\n        output.push([match[1].toUpperCase(), match[2]].join(\"\"));\n        match = re.exec(s);\n    }\n\n    return output;\n\n}\n//Splits JSON based on categories, returns a string with nice spacing between categories\nfunction prettifyJSON(data, idx){\n  var idx = idx ? idx : 0\n  let str = JSON.stringify(data, '\\n', 4)\n  let arr = str.split('\\n')\n  \n  let prevCat = null\n  arr.forEach((item,index) => {\n    \n   let cat = splitWords(item)[idx]\n   let cats = 0 \n    if(prevCat !== cat && index != 1 && index != arr.length -1){\n      cats ++ \n      if (cats >= 1){\n      arr[index-1] += '\\n'\n      cats = 0\n      }\n    }\n   prevCat = cat\n  })\n  \n  str = arr.join('\\n')\n  return str\n  }","module.exports = require(\"buffer\");","module.exports = require(\"os\");","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"util\");"],"sourceRoot":""}